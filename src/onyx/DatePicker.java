/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DatePicker.java
 *
 * Created on 2010.02.28., 10:29:25
 */

package onyx;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author PIRI
 */
public class DatePicker extends javax.swing.JPanel implements ActionListener, ListSelectionListener {
    private final String[] honapok= {"Január", "Február", "Március", "Április", "Május", "Június", "Július", "Augusztus", "Szeptember", "Október", "November", "December"};
    private String[] tabla_fejlec={"Hét", "H", "K", "Sz", "Cs", "P", "Sz", "V"};
    private String[][]tabla;
    private boolean validselection;
    private String[] selecteddates;
    private Calendar nap;
    /** Creates new form DatePicker */
    public DatePicker() {
        tabla=new String[6][8];
        selecteddates=new String[8];
        nap=getMaiNap();
        CalculateCalendar(nap);
        initComponents();
        tblDatum.getSelectionModel().addListSelectionListener(this);
        updateLabel(nap);
    }
    private void CalculateCalendar(Calendar cal){
        int ev=cal.get(Calendar.YEAR);
        int ho=cal.get(Calendar.MONTH);
        int hohossz=cal.getActualMaximum(Calendar.DAY_OF_MONTH);
//        Calendar nap=new GregorianCalendar();
        int i;
        int j;
        int n=1;

        do{
            j=0;
            cal.set(ev, ho, n);
            cal.setFirstDayOfWeek(Calendar.MONDAY);
            i=cal.get(Calendar.WEEK_OF_MONTH)-1;
            tabla[i][j]=String.valueOf(cal.get(Calendar.WEEK_OF_YEAR));
            j=cal.get(Calendar.DAY_OF_WEEK);
            if(j==Calendar.SUNDAY){
                j=7;
            }else{
                j--;
            }
            tabla[i][j]=String.valueOf(n);
            n++;

        }while(n<hohossz+1);
    }

    private void updateLabel(Calendar cal){
        int ho=cal.get(Calendar.MONTH);
        lblAktualisHonap.setText(String.valueOf(cal.get(Calendar.YEAR))+" "+ honapok[ho]);
    }

    private void changeMonth(boolean direction){
        //true=up, false=down
        if(direction){
            nap.add(Calendar.MONTH, 1);
        }else{
            nap.add(Calendar.MONTH, -1);
        }
        for(int i=0;i<6;i++){
            for(int j=0;j<8;j++){
                tabla[i][j]="";
            }
        }
        CalculateCalendar(nap);
        setTable();
    }

    private void setTable(){
        TableModel model=new DefaultTableModel(tabla, tabla_fejlec);
        tblDatum.setModel(model);
        updateLabel(nap);
    }

    private Calendar getMaiNap(){
        Calendar mainap=new GregorianCalendar();
        return mainap;
    }

    public boolean isValidSelection(){
        return validselection;
    }

    public String[] getSelectedDates(){
        return selecteddates;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDatum = new javax.swing.JTable();
        lblAktualisHonap = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnForward = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblDatum.setModel(new javax.swing.table.DefaultTableModel(
            tabla,
            tabla_fejlec
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDatum.setRowHeight(20);
        tblDatum.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblDatum);
        tblDatum.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblDatum.getColumnModel().getColumn(0).setResizable(false);
        tblDatum.getColumnModel().getColumn(0).setPreferredWidth(20);
        tblDatum.getColumnModel().getColumn(1).setResizable(false);
        tblDatum.getColumnModel().getColumn(1).setPreferredWidth(10);
        tblDatum.getColumnModel().getColumn(2).setResizable(false);
        tblDatum.getColumnModel().getColumn(2).setPreferredWidth(10);
        tblDatum.getColumnModel().getColumn(3).setResizable(false);
        tblDatum.getColumnModel().getColumn(3).setPreferredWidth(10);
        tblDatum.getColumnModel().getColumn(4).setResizable(false);
        tblDatum.getColumnModel().getColumn(4).setPreferredWidth(10);
        tblDatum.getColumnModel().getColumn(5).setResizable(false);
        tblDatum.getColumnModel().getColumn(5).setPreferredWidth(10);
        tblDatum.getColumnModel().getColumn(6).setResizable(false);
        tblDatum.getColumnModel().getColumn(6).setPreferredWidth(10);
        tblDatum.getColumnModel().getColumn(7).setResizable(false);
        tblDatum.getColumnModel().getColumn(7).setPreferredWidth(10);

        lblAktualisHonap.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblAktualisHonap.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAktualisHonap.setText("jLabel1");
        lblAktualisHonap.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btnBack.setText("<<");
        btnBack.setActionCommand("back");
        btnBack.addActionListener(this);

        btnForward.setText(">>");
        btnForward.setActionCommand("forward");
        btnForward.addActionListener(this);

        btnCancel.setText("Mégse");
        btnCancel.setActionCommand("cancel");
        btnCancel.addActionListener(this);

        btnOk.setText("OK");
        btnOk.setActionCommand("ok");
        btnOk.addActionListener(this);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnOk)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, 0, 0, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(7, 7, 7)
                            .addComponent(btnBack)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lblAktualisHonap, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnForward))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAktualisHonap, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(btnBack)
                    .addComponent(btnForward))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOk))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnForward;
    private javax.swing.JButton btnOk;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAktualisHonap;
    private javax.swing.JTable tblDatum;
    // End of variables declaration//GEN-END:variables

    public void actionPerformed(ActionEvent e) {
        if(e.getActionCommand().equals("ok")){
            this.setVisible(false);
            
        }
        if(e.getActionCommand().equals("cancel")){
            validselection=false;
            this.setVisible(false);
        }
        if(e.getActionCommand().equals("back")){
            changeMonth(false);
        }
        if(e.getActionCommand().equals("forward")){
            changeMonth(true);
        }

    }

    public void valueChanged(ListSelectionEvent e) {
        int sor=tblDatum.getSelectedRow();
        if(sor!=-1){
            for(int i=0;i<8;i++){
                selecteddates[i]=tabla[sor][i];
            }
            validselection=true;
        }
    }

}
